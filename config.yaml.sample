server:
  port: 7233
  host: "0.0.0.0"

metrics:
  port: 9090

encryption:
  caching:
    max_cache: 100
    max_age: "10m"
    max_usage: 100

targets:
  - proxy_id: "<id>"
    temporal_cloud:
      namespace: "<namespace>.<account>"
      host_port: "<namespace>.<account>.tmprl.cloud:7233" # endpoint when using mTLS
      # host_port: "<region>.<cloud>.api.temporal.io:7233" # endpoint when using API keys
      authentication: # only set either tls or api_key, not both
        tls:
          cert_file: "/path/to/<namespace>.<account>/tls.crt"
          key_file: "/path/to/<namespace>.<account>/tls.key"
        api_key: # only set either value or env, not both
            value: "<api key>"
            env: <env_var>
    encryption_key: "<key>"
    authentication:
      type: "spiffe"
      config:
        trust_domain: "spiffe://example.org/"
        endpoint: "unix:///tmp/spire-agent/public/api.sock"
        audiences:
          - "temporal_cloud_proxy"

  - proxy_id: "<id>"
    temporal_cloud:
      namespace: "<namespace>.<account>"
      host_port: "<namespace>.<account>.tmprl.cloud:7233" # endpoint when using mTLS
      # host_port: "<region>.<cloud>.api.temporal.io:7233" # endpoint when using API keys
      authentication: # only set either tls or api_key, not both
        tls:
          cert_file: "/path/to/<namespace>.<account>/tls.crt"
          key_file: "/path/to/<namespace>.<account>/tls.key"
        api_key: # only set either value or env, not both
            value: "<api key>"
            env: <env_var>
    encryption_key: "<key>"
    authentication:
      type: "spiffe"
      config:
        trust_domain: "spiffe://example.org/"
        endpoint: "unix:///tmp/spire-agent/public/api.sock"
        audiences:
          - "temporal_cloud_proxy"
